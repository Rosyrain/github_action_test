## This workflow will build a golang project
## For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
#
#name: Go
#
#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v4
#
#    - name: Set up Go
#      uses: actions/setup-go@v4
#      with:
#        go-version: '1.22.3'
#
#    - name: Build
#      run: go build
#
#    - name: Test
#      run: go test -v ./...
#
#    - name: Test Docker Hello-action
#      id: docker_hello
#      uses: Rosyrain/CI_test/actions/hello-world-docker-action@main
#      with:
#        who-to-greet: 'Rosyrain'
#
#    - name: Get the step-docker_hello output
#      run: echo "The time was ${{ steps.docker_hello.outputs.time }}"
#
#    - name: Test JS Hello-action
#      id: js_hello
#      uses: Rosyrain/CI_test/actions/hello-world-js-action@main
#      with:
#        who-to-greet: 'Rosyrain'
#
#    - name: Get the step-js_hello output
#      run: echo "The time was ${{ steps.js_hello.outputs.time }}"